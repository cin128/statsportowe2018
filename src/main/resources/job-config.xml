<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	
	http://www.springframework.org/schema/beans/spring-beans.xsd 	
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd 			
    http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task.xsd">

	<context:component-scan base-package="pl.polskieligi.batch" />

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="${batch.databaseType}" />
	</bean>

	<bean id="jobRegistry"
		  class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobExplorer"
		  class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />


	<bean id="jobLauncher"
		  class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor" ref="taskExecutor" />
	</bean>

	<bean id="emptyWriter" class="pl.polskieligi.batch.EmptyWriter" />

	<!--Project-->

	<bean id="projectProcessor" class="pl.polskieligi.batch.project.ProjectProcessor" />

	<!--Import JOB-->

	<job id="projectImportJob" xmlns="http://www.springframework.org/schema/batch"
		 restartable="true">
		<step id="projectImportStep" allow-start-if-complete="true">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="projectImportReader" processor="projectProcessor"
					   writer="emptyWriter" commit-interval="1" />
			</tasklet>
		</step>
	</job>

	<bean id="projectImportReader" class="pl.polskieligi.batch.project.ProjectImportReader" />

	<!--Update JOB-->

 	<bean id="projectUpdateScheduler" class="pl.polskieligi.batch.project.ProjectUpdateScheduler" />

	<task:scheduled-tasks>
<!-- 		<task:scheduled ref="projectUpdateScheduler" method="run"
			cron="*/30 * * * * *" /> -->
		<task:scheduled ref="projectUpdateScheduler" method="run"
			cron="* * 1 ? * WED" />
	</task:scheduled-tasks>


	<job id="projectUpdateJob" xmlns="http://www.springframework.org/schema/batch"
		restartable="true">
		<listeners>
			<listener ref="projectUpdateJobExecutionListener" />
		</listeners>
		<step id="projectUpdateStep" allow-start-if-complete="true">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="projectUpdateReader" processor="projectProcessor"
					writer="emptyWriter" commit-interval="1" />
			</tasklet>
		</step>
	</job>

	<bean id="projectUpdateReader"
		  class="org.springframework.batch.item.database.JpaPagingItemReader">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
		<property name="queryString">
			<!-- Why CDATA? because < etc. is not allowed for xml values when you
				use &lt; xml parser will work, but now the sql won't because of the & spring
				assumes a placeholder, see - AbstractSqlPagingQueryProvider.init(...) - JdbcParameterUtils.countParameterPlaceholders(...) -->
			<value>
				<![CDATA[
                    FROM Project where type = 1 AND (published = FALSE OR archive = FALSE)
                ]]>
			</value>
		</property>
		<property name="pageSize" value="1000"/>
	</bean>

	<bean id="projectUpdateJobExecutionListener" class="pl.polskieligi.batch.project.ProjectUpdateJobExecutionListener" />

    <!--Player-->

    <job id="playerImportJob" xmlns="http://www.springframework.org/schema/batch"
         restartable="true">
        <step id="playerImportStep" allow-start-if-complete="true">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="playerImportReader" processor="playerProcessor"
                       writer="emptyWriter" commit-interval="1" />
            </tasklet>
        </step>
    </job>

    <bean id="playerImportReader" class="pl.polskieligi.batch.player.PlayerImportReader" />

    <bean id="playerProcessor" class="pl.polskieligi.batch.player.PlayerProcessor" />
        
    <!--Team-->

    <job id="teamImportJob" xmlns="http://www.springframework.org/schema/batch"
         restartable="true">
        <step id="teamImportStep" allow-start-if-complete="true">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="teamImportReader" processor="teamProcessor"
                       writer="emptyWriter" commit-interval="1" />
            </tasklet>
        </step>
    </job>

    <bean id="teamImportReader" class="pl.polskieligi.batch.team.TeamImportReader" />

    <bean id="teamProcessor" class="pl.polskieligi.batch.team.TeamProcessor" />
    
    
     <job id="teamUpdateJob" xmlns="http://www.springframework.org/schema/batch"
         restartable="true">
        <step id="teamUpdateStep" allow-start-if-complete="true">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="teamUpdateReader" processor="teamProcessor"
                       writer="emptyWriter" commit-interval="1" />
            </tasklet>
        </step>
    </job>
    
    <bean id="teamUpdateReader"
		  class="org.springframework.batch.item.database.JpaPagingItemReader">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
		<property name="queryString">
			<!-- Why CDATA? because < etc. is not allowed for xml values when you
				use &lt; xml parser will work, but now the sql won't because of the & spring
				assumes a placeholder, see - AbstractSqlPagingQueryProvider.init(...) - JdbcParameterUtils.countParameterPlaceholders(...) -->
			<value>
				<![CDATA[
                    FROM Team where name IS NULL
                ]]>
			</value>
		</property>
		<property name="pageSize" value="1000"/>
	</bean>
    
    
</beans>
